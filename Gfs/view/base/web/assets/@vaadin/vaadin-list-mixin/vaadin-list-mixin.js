import{FlattenedNodesObserver}from"../../@polymer/polymer/lib/utils/flattened-nodes-observer.js";import{Debouncer}from"../../@polymer/polymer/lib/utils/debounce.js";import{timeOut}from"../../@polymer/polymer/lib/utils/async.js";export const ListMixin=superClass=>class extends superClass{static get properties(){return{_hasVaadinListMixin:{value:!0},selected:{type:Number,reflectToAttribute:!0,notify:!0},orientation:{type:String,reflectToAttribute:!0,value:""},items:{type:Array,readOnly:!0,notify:!0},_searchBuf:{type:String,value:""}}}static get observers(){return["_enhanceItems(items, orientation, selected)"]}ready(){super.ready();this.addEventListener("keydown",e=>this._onKeydown(e));this.addEventListener("click",e=>this._onClick(e));this._observer=new FlattenedNodesObserver(this,()=>{this._setItems(this._filterItems(Array.from(this.children)))})}_enhanceItems(items,orientation,selected){if(items){this.setAttribute("aria-orientation",orientation||"vertical");this.items.forEach(item=>{orientation?item.setAttribute("orientation",orientation):item.removeAttribute("orientation");item.updateStyles()});this._setFocusable(selected);const itemToSelect=items[selected];items.forEach(item=>item.selected=item===itemToSelect);if(itemToSelect&&!itemToSelect.disabled){this._scrollToItem(selected)}}}get focused(){return this.getRootNode().activeElement}_filterItems(array){return array.filter(e=>e._hasVaadinItemMixin)}_onClick(event){if(event.metaKey||event.shiftKey||event.ctrlKey){return}const item=this._filterItems(event.composedPath())[0];let idx;if(item&&!item.disabled&&0<=(idx=this.items.indexOf(item))){this.selected=idx}}_searchKey(currentIdx,key){this._searchReset=Debouncer.debounce(this._searchReset,timeOut.after(500),()=>this._searchBuf="");this._searchBuf+=key.toLowerCase();if(!this.items.some(item=>0===item.textContent.replace(/[^a-zA-Z0-9]/g,"").toLowerCase().indexOf(this._searchBuf))){this._searchBuf=key.toLowerCase()}const idx=1===this._searchBuf.length?currentIdx+1:currentIdx;return this._getAvailableIndex(idx,1,item=>!item.disabled&&0===item.textContent.replace(/[^a-zA-Z0-9]/g,"").toLowerCase().indexOf(this._searchBuf))}_onKeydown(event){if(event.metaKey||event.ctrlKey){return}const key=event.key.replace(/^Arrow/,""),currentIdx=this.items.indexOf(this.focused);if(/[a-zA-Z0-9]/.test(key)&&1===key.length){const idx=this._searchKey(currentIdx,key);if(0<=idx){this._focus(idx)}return}let idx,increment;if(this._vertical&&"Up"===key||!this._vertical&&"Left"===key){increment=-1;idx=currentIdx-1}else if(this._vertical&&"Down"===key||!this._vertical&&"Right"===key){increment=1;idx=currentIdx+1}else if("Home"===key){increment=1;idx=0}else if("End"===key){increment=-1;idx=this.items.length-1}idx=this._getAvailableIndex(idx,increment,item=>!item.disabled);if(0<=idx){this._focus(idx);event.preventDefault()}}_getAvailableIndex(idx,increment,condition){const totalItems=this.items.length;for(let i=0;"number"==typeof idx&&i<totalItems;i++,idx+=increment||1){if(0>idx){idx=totalItems-1}else if(idx>=totalItems){idx=0}const item=this.items[idx];if(condition(item)){return idx}}return-1}_setFocusable(idx){idx=this._getAvailableIndex(idx,1,item=>!item.disabled);const item=this.items[idx]||this.items[0];this.items.forEach(e=>e.tabIndex=e===item?0:-1)}_focus(idx){const item=this.items[idx];this.items.forEach(e=>e.focused=e===item);this._setFocusable(idx);this._scrollToItem(idx);item.focus()}focus(){this._observer&&this._observer.flush();const firstItem=this.querySelector("[tabindex=\"0\"]")||(this.items?this.items[0]:null);firstItem&&firstItem.focus()}get _scrollerElement(){}_scrollToItem(idx){const item=this.items[idx];if(!item){return}const props=this._vertical?["top","bottom"]:["left","right"],scrollerRect=this._scrollerElement.getBoundingClientRect(),nextItemRect=(this.items[idx+1]||item).getBoundingClientRect(),prevItemRect=(this.items[idx-1]||item).getBoundingClientRect();let scrollDistance=0;if(nextItemRect[props[1]]>=scrollerRect[props[1]]){scrollDistance=nextItemRect[props[1]]-scrollerRect[props[1]]}else if(prevItemRect[props[0]]<=scrollerRect[props[0]]){scrollDistance=prevItemRect[props[0]]-scrollerRect[props[0]]}this._scroll(scrollDistance)}get _vertical(){return"horizontal"!==this.orientation}_scroll(pixels){this._scrollerElement["scroll"+(this._vertical?"Top":"Left")]+=pixels}};
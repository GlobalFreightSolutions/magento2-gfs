import getTimezoneOffsetInMilliseconds from"../_lib/getTimezoneOffsetInMilliseconds/index.js";import compareAsc from"../compareAsc/index.js";import toDate from"../toDate/index.js";import differenceInSeconds from"../differenceInSeconds/index.js";import differenceInMonths from"../differenceInMonths/index.js";import cloneObject from"../_lib/cloneObject/index.js";import defaultLocale from"../locale/en-US/index.js";var MINUTES_IN_DAY=1440,MINUTES_IN_ALMOST_TWO_DAYS=2520,MINUTES_IN_MONTH=43200,MINUTES_IN_TWO_MONTHS=86400;export default function formatDistance(dirtyDate,dirtyBaseDate,dirtyOptions){var _Mathround=Math.round;if(2>arguments.length){throw new TypeError("2 arguments required, but only "+arguments.length+" present")}var options=dirtyOptions||{},locale=options.locale||defaultLocale;if(!locale.formatDistance){throw new RangeError("locale must contain formatDistance property")}var comparison=compareAsc(dirtyDate,dirtyBaseDate);if(isNaN(comparison)){throw new RangeError("Invalid time value")}var localizeOptions=cloneObject(options);localizeOptions.addSuffix=!!options.addSuffix;localizeOptions.comparison=comparison;var dateLeft,dateRight;if(0<comparison){dateLeft=toDate(dirtyBaseDate);dateRight=toDate(dirtyDate)}else{dateLeft=toDate(dirtyDate);dateRight=toDate(dirtyBaseDate)}var seconds=differenceInSeconds(dateRight,dateLeft),offsetInSeconds=(getTimezoneOffsetInMilliseconds(dateRight)-getTimezoneOffsetInMilliseconds(dateLeft))/1e3,minutes=_Mathround((seconds-offsetInSeconds)/60),months;if(2>minutes){if(options.includeSeconds){if(5>seconds){return locale.formatDistance("lessThanXSeconds",5,localizeOptions)}else if(10>seconds){return locale.formatDistance("lessThanXSeconds",10,localizeOptions)}else if(20>seconds){return locale.formatDistance("lessThanXSeconds",20,localizeOptions)}else if(40>seconds){return locale.formatDistance("halfAMinute",null,localizeOptions)}else if(60>seconds){return locale.formatDistance("lessThanXMinutes",1,localizeOptions)}else{return locale.formatDistance("xMinutes",1,localizeOptions)}}else{if(0===minutes){return locale.formatDistance("lessThanXMinutes",1,localizeOptions)}else{return locale.formatDistance("xMinutes",minutes,localizeOptions)}}}else if(45>minutes){return locale.formatDistance("xMinutes",minutes,localizeOptions)}else if(90>minutes){return locale.formatDistance("aboutXHours",1,localizeOptions)}else if(minutes<MINUTES_IN_DAY){var hours=_Mathround(minutes/60);return locale.formatDistance("aboutXHours",hours,localizeOptions)}else if(minutes<MINUTES_IN_ALMOST_TWO_DAYS){return locale.formatDistance("xDays",1,localizeOptions)}else if(minutes<MINUTES_IN_MONTH){var days=_Mathround(minutes/MINUTES_IN_DAY);return locale.formatDistance("xDays",days,localizeOptions)}else if(minutes<MINUTES_IN_TWO_MONTHS){months=_Mathround(minutes/MINUTES_IN_MONTH);return locale.formatDistance("aboutXMonths",months,localizeOptions)}months=differenceInMonths(dateRight,dateLeft);if(12>months){var nearestMonth=_Mathround(minutes/MINUTES_IN_MONTH);return locale.formatDistance("xMonths",nearestMonth,localizeOptions)}else{var monthsSinceStartOfYear=months%12,years=Math.floor(months/12);if(3>monthsSinceStartOfYear){return locale.formatDistance("aboutXYears",years,localizeOptions)}else if(9>monthsSinceStartOfYear){return locale.formatDistance("overXYears",years,localizeOptions)}else{return locale.formatDistance("almostXYears",years+1,localizeOptions)}}}